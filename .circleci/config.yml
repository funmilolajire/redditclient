version: 2.1
orbs:
  node: circleci/node@3.0.0
jobs:
  test:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Test
          command: npm run test
      - store_test_results:
          path: ~/project/__tests__
  coverage:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Coverage
          command: npm run test:coverage
      # Run coverage report for Code Climate
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
          when: always
      - run:
          name: Send coverage report to Code Climate
          command:
            # nyc report requires that nyc has already been run,
            # which creates the .nyc_output folder containing necessary data
            ./cc-test-reporter -t lcov
          # Upload results
      - store_artifacts: # upload test coverage as artifact
          path: ./coverage/lcov.info
      - store_artifacts:
          path: ~/project/coverage
          destination: coverage
  build:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Build
          command: npm run build
  deploy:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Build
          command: npm run build
      - run:
          name: Deploy
          command: npm run netlify:deploy
workflows:
  test_build_deploy:
    jobs:
      - test
      - coverage
      - build:
          requires:
            - test
      - hold:
          type: approval
          filters:
            branches:
              only: production
          requires:
            - build
            - test
            - coverage
      - deploy:
          requires:
            - hold
